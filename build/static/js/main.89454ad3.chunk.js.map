{"version":3,"sources":["telephone.svg","components/Button.js","components/Navbar.js","data.js","context.js","components/Product.js","components/Title.js","components/ProductList.js","components/Details.js","components/cart/CartColumns.js","components/cart/EmptyCart.js","components/cart/CartItem.js","components/cart/CartList.js","components/cart/PayPalButton.js","components/cart/CartTotals.js","components/cart/Cart.js","components/Default.js","components/Modal.js","components/about/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","styled","button","ContentButton","props","cart","Navbar","NavStyler","className","to","src","logo","alt","Provider","value","color","size","Component","nav","storeProducts","id","title","img","price","company","info","inCart","count","total","detailProduct","ProductContext","React","createContext","ProductProvider","state","products","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","find","handleDetail","product","addToCart","index","indexOf","addTotals","openModal","closeModal","increment","tempCart","selectedProduct","decrement","removeItem","filter","removedProduct","clearCart","subTotal","map","tax","parseFloat","toFixed","this","children","ProductConsumer","Consumer","Product","ProductStyler","onClick","disabled","toLocaleString","div","Title","name","ProductList","Fragment","productValue","key","Details","CartColumns","EmptyCart","CartItem","style","width","height","CartList","console","log","CartTotals","history","type","Cart","length","location","pathname","Modal","ModalContainer","About","App","exact","path","component","Default","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,uC,o2CCEfC,IAAOC,OAAV,KAAlB,IAoBUC,EAAgBF,IAAOC,OAAV,IAGjB,SAAAE,GAAK,OAAKA,EAAMC,KAAO,oBAAsB,mBAOtC,SAAAD,GAAK,OAAKA,EAAMC,KAAO,oBAAoB,mBASzC,SAAAD,GAAK,OAAKA,EAAMC,KAAO,oBAAsB,oB,mRCjC9CC,E,iLAEb,OACI,kBAACC,EAAD,CAAWC,UAAU,0DAMjB,kBAAC,IAAD,CAAMC,GAAG,KACL,yBAAKC,IAAKC,IAAMC,IAAI,QAAQJ,UAAU,kBAG1C,wBAAIA,UAAU,iCACV,wBAAIA,UAAU,iBACV,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,YAAvB,gBAGJ,wBAAIA,UAAU,iBACV,kBAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,YAA5B,WAIR,kBAAC,IAAD,CAAMC,GAAG,QAAQD,UAAU,WAEvB,kBAAC,IAAYK,SAAb,CACIC,MAAO,CACHC,MAAO,QACPC,KAAM,KAGV,kBAAC,IAAD,a,GA/BYC,aAwC9BV,EAAYN,IAAOiB,IAAV,K,gBC3CFC,EAAgB,CAC3B,CACEC,GAAI,EACJC,MAAO,eACPC,IAAK,oBACLC,MAAO,KACPC,QAAS,SACTC,KACE,+fACFC,QAAQ,EACRC,MAAO,EACPC,MAAO,GAET,CACER,GAAI,EACJC,MAAO,aACPC,IAAK,oBACLC,MAAO,MACPC,QAAS,UACTC,KACE,+fACFC,QAAQ,EACRC,MAAO,EACPC,MAAO,GAET,CACER,GAAI,EACJC,MAAO,iBACPC,IAAK,oBACLC,MAAO,KACPC,QAAS,MACTC,KACE,+fACFC,QAAQ,EACRC,MAAO,EACPC,MAAO,GAET,CACER,GAAI,EACJC,MAAO,iBACPC,IAAK,oBACLC,MAAO,MACPC,QAAS,MACTC,KACE,+fACFC,QAAQ,EACRC,MAAO,EACPC,MAAO,GAET,CACER,GAAI,EACJC,MAAO,kBACPC,IAAK,oBACLC,MAAO,KACPC,QAAS,MACTC,KACE,+fACFC,QAAQ,EACRC,MAAO,EACPC,MAAO,GAET,CACER,GAAI,EACJC,MAAO,iBACPC,IAAK,oBACLC,MAAO,KACPC,QAAS,QACTC,KACE,+fACFC,QAAQ,EACRC,MAAO,EACPC,MAAO,GAET,CACER,GAAI,EACJC,MAAO,WACPC,IAAK,oBACLC,MAAO,IACPC,QAAS,QACTC,KACE,+fACFC,QAAQ,EACRC,MAAO,EACPC,MAAO,GAET,CACER,GAAI,EACJC,MAAO,iBACPC,IAAK,oBACLC,MAAO,IACPC,QAAS,QACTC,KACE,+fACFC,QAAQ,EACRC,MAAO,EACPC,MAAO,IAIEC,EAAgB,CAC3BT,GAAI,EACJC,MAAO,uBACPC,IAAK,oBACLC,MAAO,KACPC,QAAS,SACTC,KACE,+fACFC,QAAQ,EACRC,MAAO,EACPC,MAAO,G,mjBC/GT,IAAME,EAAiBC,IAAMC,gBAEvBC,E,2MACFC,MAAQ,CACJC,SAAgB,GAChBN,cAAgBA,EAChBxB,KAAM,GACN+B,WAAW,EACXC,aAAcR,EACdS,aAAc,EACdC,QAAS,EACTC,UAAW,G,EAOfC,YAAc,WACV,IAAIC,EAAe,GACnBvB,EAAcwB,QAAQ,SAAAC,GAClB,IAAMC,EAAU,KAAOD,GACvBF,EAAY,sBAAOA,GAAP,CAAqBG,MAIrC,EAAKC,SAAS,WACV,MAAO,CAACX,SAAUO,M,EAK1BK,QAAU,SAAC3B,GAEP,OADgB,EAAKc,MAAMC,SAASa,KAAK,SAAAJ,GAAI,OAAIA,EAAKxB,KAAOA,K,EAOjE6B,aAAe,SAAC7B,GACZ,IAAM8B,EAAU,EAAKH,QAAQ3B,GAC7B,EAAK0B,SAAS,WACV,MAAO,CAACjB,cAAcqB,M,EAQ9BC,UAAY,SAAC/B,GACT,IAAIsB,EAAY,YAAO,EAAKR,MAAMC,UAC5BiB,EAAQV,EAAaW,QAAQ,EAAKN,QAAQ3B,IAC1C8B,EAAUR,EAAaU,GAC7BF,EAAQxB,QAAS,EACjBwB,EAAQvB,MAAQ,EAEhB,IAAMJ,EAAQ2B,EAAQ3B,MACtB2B,EAAQtB,MAAQL,EAEhB,EAAKuB,SAAS,WACV,MAAO,CACHX,SAAUO,EACVrC,KAAK,GAAD,mBAAM,EAAK6B,MAAM7B,MAAjB,CAAuB6C,MAEjC,WACE,EAAKI,e,EAMbC,UAAY,SAACnC,GACT,IAAM8B,EAAU,EAAKH,QAAQ3B,GAC7B,EAAK0B,SAAU,WACX,MAAM,CACFT,aAAca,EACdd,WAAW,M,EAOvBoB,WAAa,WACT,EAAKV,SAAS,WACV,MAAM,CAACV,WAAW,M,EAK1BqB,UAAY,SAACrC,GACT,IAAIsC,EAAQ,YAAO,EAAKxB,MAAM7B,MACxBsD,EAAkBD,EAASV,KAAK,SAAAJ,GAAI,OAAGA,EAAKxB,KAAMA,IAElDgC,EAAQM,EAASL,QAAQM,GACzBT,EAAUQ,EAASN,GAEzBF,EAAQvB,MAAQuB,EAAQvB,MAAQ,EAChCuB,EAAQtB,MAAQsB,EAAQvB,MAAQuB,EAAQ3B,MAExC,EAAKuB,SAAS,WACV,MAAM,CACFzC,KAAK,YAAKqD,KAEd,WACI,EAAKJ,e,EAMjBM,UAAY,SAACxC,GACT,IAAMsC,EAAQ,YAAO,EAAKxB,MAAM7B,MAC1BsD,EAAkBD,EAASV,KAAK,SAAAJ,GAAI,OAAIA,EAAKxB,KAAOA,IAEpDgC,EAAQM,EAASL,QAAQM,GACzBT,EAAUQ,EAASN,GAEzBF,EAAQvB,MAAQuB,EAAQvB,MAAQ,EAEV,IAAlBuB,EAAQvB,MACR,EAAKkC,WAAWzC,IAGpB8B,EAAQtB,MAAQsB,EAAQtB,MAAQsB,EAAQ3B,MAExC,EAAKuB,SAAS,WACV,MAAO,CACHzC,KAAK,YAAKqD,KAGlB,WACI,EAAKJ,gB,EAMbO,WAAa,SAACzC,GACV,IAAIsB,EAAY,YAAO,EAAKR,MAAMC,UAC9BuB,EAAQ,YAAO,EAAKxB,MAAM7B,MAE9BqD,EAAWA,EAASI,OAAO,SAAAlB,GAAI,OAAIA,EAAKxB,KAAOA,IAE/C,IAAMgC,EAAQV,EAAaW,QAAQ,EAAKN,QAAQ3B,IAC5C2C,EAAiBrB,EAAaU,GAGlCW,EAAerC,QAAS,EACxBqC,EAAepC,MAAQ,EACvBoC,EAAenC,MAAQ,EAEvB,EAAKkB,SAAS,WACV,MAAM,CACFzC,KAAK,YAAKqD,GACVvB,SAAS,YAAKO,KAEnB,WACC,EAAKY,e,EAIbU,UAAY,WACR,EAAKlB,SAAS,WACV,MAAO,CAACzC,KAAM,KAGd,WACI,EAAKoC,cACL,EAAKa,e,EAQjBA,UAAY,WACR,IAAIW,EAAW,EACf,EAAK/B,MAAM7B,KAAK6D,IAAI,SAAAtB,GAAI,OAAGqB,GAAYrB,EAAKhB,QAC5C,IACMuC,EAAMC,YADe,GAAXH,GACeI,QAAQ,IACjCzC,EAAQqC,EAAWE,EACzB,EAAKrB,SAAS,WACV,MAAM,CACFR,aAAc2B,EACd1B,QAAS4B,EACT3B,UAAWZ,M,mFA9KnB0C,KAAK7B,gB,+BAqLL,OACI,kBAACX,EAAejB,SAAhB,CAAyBC,MAAK,KACvBwD,KAAKpC,MADkB,CAE1Be,aAAcqB,KAAKrB,aACnBE,UAAWmB,KAAKnB,UAChBI,UAAWe,KAAKf,UAChBC,WAAYc,KAAKd,WACjBC,UAAWa,KAAKb,UAChBG,UAAWU,KAAKV,UAChBC,WAAYS,KAAKT,WACjBG,UAAWM,KAAKN,aAEfM,KAAKlE,MAAMmE,c,GA9MEtD,aAoNxBuD,EAAkB1C,EAAe2C,S,qxCChNlBC,E,iLACR,MAImCJ,KAAKlE,MAAM8C,QAA5C9B,EAJF,EAIEA,GAAIC,EAJN,EAIMA,MAAOC,EAJb,EAIaA,IAAKC,EAJlB,EAIkBA,MAAOG,EAJzB,EAIyBA,OAC9B,OACI,kBAACiD,EAAD,CAAenE,UAAU,wCACrB,yBAAKA,UAAU,QAEX,kBAACgE,EAAD,KACK,SAAC1D,GAAD,OACG,yBAAKN,UAAU,oBAAoBoE,QAAS,kBACxC9D,EAAMmC,aAAa7B,KAEvB,kBAAC,IAAD,CAAMX,GAAG,YACL,yBAAKC,IAAKY,EAAKV,IAAI,UAAUJ,UAAU,kBAG3C,4BAAQA,UAAU,WAAWqE,WAAUnD,EAAuBkD,QAAS,WAAK9D,EAAMqC,UAAU/B,GAC5FN,EAAMyC,UAAUnC,KAEfM,EAAQ,uBAAGlB,UAAU,wBAAb,WAEL,kBAAC,IAAYK,SAAb,CACAC,MAAS,CACLC,MAAO,QACPC,KAAM,KAGN,kBAAC,IAAD,WAgBhB,yBAAKR,UAAU,8CACX,uBAAGA,UAAU,0BACRa,GAEL,wBAAIb,UAAU,8BAA8Be,EAAMuD,iBAC9C,0BAAMtE,UAAU,QAAO,iD,GAnDdS,aA2E/B0D,EAAgB1E,IAAO8E,IAAV,KClFJ,SAASC,EAAT,GAA8B,IAAdC,EAAa,EAAbA,KAAK5D,EAAQ,EAARA,MAChC,OACI,yBAAKb,UAAU,OACX,yBAAKA,UAAU,8CACX,wBAAIA,UAAU,oCACTyE,EADL,IACW,4BAAQzE,UAAU,aAAaa,M,6ECDrC6D,E,iLAMb,OAEI,kBAAC,IAAMC,SAAP,KACI,yBAAK3E,UAAU,QACX,yBAAKA,UAAU,aACX,kBAACwE,EAAD,CAAOC,KAAK,MAAM5D,MAAM,gBACxB,yBAAKb,UAAU,OACX,kBAACgE,EAAD,KACK,SAACY,GACA,OAAOA,EAAajD,SAAS+B,IAAI,SAAAhB,GAC7B,OAAO,kBAAC,EAAD,CAASmC,IAAKnC,EAAQ9B,GAAI8B,QAASA,gB,GAhBvCjC,aCDpBqE,GDiCKrF,IAAO8E,IAAV,K,iLC/Bf,OAEI,kBAACP,EAAD,KAEK,SAAC1D,GAAU,MAGgDA,EAAMe,cAAvDT,EAHC,EAGDA,GAAII,EAHH,EAGGA,QAASF,EAHZ,EAGYA,IAAKG,EAHjB,EAGiBA,KAAMF,EAHvB,EAGuBA,MAAOF,EAH9B,EAG8BA,MAAQK,EAHtC,EAGsCA,OAE9C,OACI,yBAAKlB,UAAU,kBAEX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,0DACX,4BACKa,KAQb,yBAAKb,UAAU,OACX,yBAAKA,UAAU,gDACX,yBAAME,IAAKY,EAAKd,UAAU,YAAYI,IAAI,aAI9C,yBAAKJ,UAAU,gDACX,sCAAYa,GACZ,wBAAIb,UAAU,kDAAd,YACa,0BAAMA,UAAU,kBACpBgB,IAIT,4BACI,0CACYD,EAAMuD,iBADlB,IACoC,uCAIxC,wBAAItE,UAAU,8CAAd,aACA,uBAAGA,UAAU,eACRiB,GAIL,6BACI,kBAAC,IAAD,CAAMhB,GAAG,KACL,kBAACN,EAAD,0BAKH,IAED,kBAACA,EAAD,CAAeE,MAAI,EAACwE,WAAUnD,EAAsBkD,QAAW,WACvD9D,EAAMqC,UAAU/B,GAChBN,EAAMyC,UAAUnC,KAEnBM,EAAQ,SAAW,yB,GAhE3BT,cCHtB,SAASsE,IACpB,OACI,yBAAK/E,UAAU,iDACX,yBAAKA,UAAU,OAEX,yBAAKA,UAAU,2BACX,uBAAGA,UAAU,kBAAb,aAGJ,yBAAKA,UAAU,2BACX,uBAAGA,UAAU,kBAAb,SAGJ,yBAAKA,UAAU,2BACX,uBAAGA,UAAU,kBAAb,UAGJ,yBAAKA,UAAU,2BACX,uBAAGA,UAAU,kBAAb,aAGJ,yBAAKA,UAAU,2BACX,uBAAGA,UAAU,kBAAb,WAGJ,yBAAKA,UAAU,2BACX,uBAAGA,UAAU,kBAAb,YC1BL,SAASgF,IACpB,OACI,yBAAKhF,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,8BACX,+DCJL,SAASiF,EAAT,GAAkC,IAAf7C,EAAc,EAAdA,KAAM9B,EAAQ,EAARA,MAC7BM,EAAkCwB,EAAlCxB,GAAGC,EAA+BuB,EAA/BvB,MAAMC,EAAyBsB,EAAzBtB,IAAIC,EAAqBqB,EAArBrB,MAAMK,EAAegB,EAAfhB,MAAMD,EAASiB,EAATjB,MACzB8B,EAAmC3C,EAAnC2C,UAAUG,EAAyB9C,EAAzB8C,UAAWC,EAAc/C,EAAd+C,WAC5B,OACI,yBAAKrD,UAAU,wCACX,yBAAKA,UAAU,2BACX,yBACAE,IAAKY,EACLoE,MAAO,CAACC,MAAO,OAAQC,OAAQ,QAC/BpF,UAAU,YACVI,IAAI,aAKR,yBAAKJ,UAAU,2BACX,0BAAMA,UAAU,aAAhB,aACCa,GAGL,yBAAKb,UAAU,2BACX,0BAAMA,UAAU,aAAhB,WACCe,EAAMuD,iBAAiB,uCAG5B,yBAAKtE,UAAU,wCACX,yBAAKA,UAAU,iCACX,0BAAMA,UAAU,qBAAqBoE,QAAS,kBAAIhB,EAAUxC,KAA5D,OAEA,0BAAMZ,UAAU,sBAAsBmB,GAEtC,0BAAMnB,UAAU,qBAAqBoE,QAAS,kBAAInB,EAAUrC,KAA5D,OAMR,yBAAKZ,UAAU,2BACX,yBAAKA,UAAU,YAAYoE,QAAS,kBAAIf,EAAWzC,KAC/C,kBAAC,IAAD,CAAsBJ,KAAM,OAKpC,yBAAKR,UAAU,2BACX,+CAAqBoB,EAAMkD,iBAA3B,UC7CD,SAASe,EAAT,GAA4B,IAAT/E,EAAQ,EAARA,MAEvBT,EAAQS,EAART,KAGP,OAFAyF,QAAQC,IAAIjF,EAAQ,IAAMT,GAGtB,yBAAKG,UAAU,mBACVH,EAAK6D,IAAI,SAAAtB,GACN,OAAO,kBAAC6C,EAAD,CAAUJ,IAAKzC,EAAKxB,GAAIwB,KAAMA,EAAM9B,MAAOA,O,qBCRxBiB,IAAMd,UCCjC,SAAS+E,EAAT,GAAuC,IAAlBlF,EAAiB,EAAjBA,MAEzBwB,GAF0C,EAAV2D,QAEenF,EAA/CwB,cAAcC,EAAiCzB,EAAjCyB,QAASC,EAAwB1B,EAAxB0B,UAAWwB,EAAalD,EAAbkD,UAEzC,OACI,kBAAC,IAAMmB,SAAP,KACI,yBAAK3E,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iFACX,kBAAC,IAAD,CAAMC,GAAG,KACL,4BAAQD,UAAU,kDAAkD0F,KAAK,SAAStB,QAAS,kBAAIZ,MAA/F,kBAKJ,4BACI,0BAAMxD,UAAU,cAAhB,cAGA,gCACK8B,EAAawC,iBADlB,SAKJ,4BACI,0BAAMtE,UAAU,cAAhB,SAGA,gCACK+B,EAAQuC,iBADb,SAKJ,4BACI,0BAAMtE,UAAU,cAAhB,WAGA,gCACKgC,EAAUsC,iBADf,a,IChCPqB,E,iLACP,IAAD,OACL,OACI,iCAEI,kBAAC3B,EAAD,KACK,SAAA1D,GAKG,OAJeA,EAART,KAIE+F,OAAS,EAEV,kBAAC,IAAMjB,SAAP,KACI,kBAACH,EAAD,CAAOC,KAAK,OAAO5D,MAAM,SAGzB,kBAACkE,EAAD,MAGA,kBAACM,EAAD,CAAU/E,MAAOA,IAEjB,kBAACkF,EAAD,CAAYlF,MAAOA,EAAOmF,QAAS,EAAK7F,MAAM6F,WAOlD,kBAACT,EAAD,a,GA7BEvE,a,mLCL1B,OACI,yBAAKT,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,6DACX,wBAAIA,UAAU,aAAd,OAIA,qCAIA,8CAIA,iDACsB,0BAAMA,UAAU,eAAe8D,KAAKlE,MAAMiG,SAASC,UADzE,yB,GAlBKrF,a,iYCIRsF,E,iLAEb,OACI,kBAAC/B,EAAD,KAEQ,SAAC1D,GAAW,IACDsB,EAAyBtB,EAAzBsB,UAAWoB,EAAc1C,EAAd0C,WADX,EAEqB1C,EAAMuB,aAA3Bf,EAFA,EAEAA,IAAKD,EAFL,EAEKA,MAAOE,EAFZ,EAEYA,MAEnB,OAAKa,EAKD,kBAACoE,EAAD,KACI,yBAAKhG,UAAU,aACX,yBAAKY,GAAG,QAAQZ,UAAU,OACtB,yBAAKA,UAAU,+DACX,kDACA,yBAAKE,IAAKY,EAAKd,UAAU,YAAYI,IAAI,YACzC,4BAAKS,GACL,wBAAIb,UAAU,cAAd,UAAmCe,EAAMuD,iBAAzC,QACA,kBAAC,IAAD,CAAMrE,GAAG,KACL,kBAACN,EAAD,CAAeyE,QAAS,WAAKpB,MAA7B,UAIH,IACD,kBAAC,IAAD,CAAM/C,GAAG,SACL,kBAACN,EAAD,CAAeE,MAAI,EAACuE,QAAS,WAAKpB,MAAlC,mBAnBb,W,GAVAvC,aAiD7BuF,EAAiBvG,IAAO8E,IAAV,KCpDC0B,I,uLAEb,OACI,yBAAKjG,UAAU,mBACX,yBAAKA,UAAU,8BACX,uBAAGA,UAAU,mBACT,uBAAGA,UAAU,aAAb,+DAAqF,8BADzF,qD,GALeS,cC8BpByF,G,iLAlBX,OAEE,kBAAC,IAAMvB,SAAP,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,IAAIC,UAAW3B,IACjC,kBAAC,IAAD,CAAO0B,KAAK,WAAWC,UAAWvB,IAClC,kBAAC,IAAD,CAAOsB,KAAK,QAAQC,UAAWV,IAC/B,kBAAC,IAAD,CAAOS,KAAK,SAASC,UAAWJ,KAChC,kBAAC,IAAD,CAAOI,UAAWC,KAGpB,kBAAC,EAAD,W,GAdU7F,aCDE8F,QACW,cAA7BC,OAAOX,SAASY,UAEe,UAA7BD,OAAOX,SAASY,UAEhBD,OAAOX,SAASY,SAASC,MACvB,2DCVNC,IAASC,OACT,kBAAC,EAAD,KACI,kBAAC,IAAD,KACI,kBAAC,GAAD,QAGJC,SAASC,eAAe,SDmHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.89454ad3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/telephone.d376c439.svg\";","import styled from 'styled-components'\n\nexport const ButtonStyler = styled.button `\n    color: var(--mainWhite);    \n    text-transform: capitalize;\n    font-size: 1.4em;\n    background-color: transparent;\n    border: 0.05rem solid var(--mainWhite);\n    border-radius: 0.5rem;\n    padding: 0.2rem 0.5rem;\n    cursor: pointer;\n    margin: 0.2rem, 0.5rem, 0.2rem, 0;\n    transition: all 0.2s ease-in-out;\n    &:hover{\n        background: var(--mainWhite);\n        color: var(--mainBrown);\n    }\n    &:focus{\n        outline: none;\n    }\n    `\n\n    export const ContentButton = styled.button `\n     \n\n    color: ${props => (props.cart ? \"var(--mainYellow)\" : \"var(--mainBlue)\")};\n\n    text-transform: capitalize;\n    font-size: 1.4em;\n    background-color: transparent;\n    border: 0.05rem solid var(--mainBlue);\n\n    border-color: ${props => (props.cart ? \"var(--mainYellow)\":\"var(--mainBlue)\")};\n\n    border-radius: 0.5rem;\n    padding: 0.2rem 0.5rem;\n    cursor: pointer;\n    margin: 0.2rem, 0.5rem, 0.2rem, 0;\n    transition: all 0.2s ease-in-out;\n\n    &:hover{\n        background: ${props => (props.cart ? \"var(--darkYellow)\" : \"var(--mainBlue)\")};\n        color: var(--mainWhite);\n        \n    }\n\n    &:focus{\n        outline: none;\n}\n`","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../telephone.svg'\nimport styled from 'styled-components'\nimport { ButtonStyler } from './Button';\nimport { MdShoppingCart } from 'react-icons/md';\nimport { IconContext } from 'react-icons';\n\nexport default class Navbar extends Component {\n    render() {\n        return (\n            <NavStyler className=\"navbar navbar-expand-sm bg-primary navbar-dark px-sm-5\">\n                {/* \nhttps://www.iconfinder.com/icons/1243689/call_phone_icon\nCreative Commons (Attribution 3.0 Unported);\nhttps://www.iconfinder.com/Makoto_msk */\n                }\n                <Link to='/'>\n                    <img src={logo} alt=\"store\" className=\"navbar-brand\" />\n                </Link>\n\n                <ul className=\"navbar-nav align-items-center\">\n                    <li className=\"nav-item ml-5\">\n                        <Link to=\"/\" className=\"nav-link\">merchandise</Link>\n                    </li>\n\n                    <li className=\"nav-item ml-5\">\n                        <Link to='/About' className=\"nav-link\">About</Link>\n                    </li>\n                </ul>\n\n                <Link to='/Cart' className=\"ml-auto\">\n\n                    <IconContext.Provider\n                        value={{\n                            color: \"white\",\n                            size: 32\n                        }}\n                    >\n                        <MdShoppingCart />\n                    </IconContext.Provider>\n\n                </Link>\n            </NavStyler>\n        )\n    }\n}\n\nconst NavStyler = styled.nav`\n    background-color: var(--mainBrown)!important;\n    .nav-link{\n        color: var(--mainWhite)!important;\n        font-size: 1.3rem;\n        text-transform: capitalize;\n    }\n\n`","/* \nhttps://www.iconfinder.com/icons/1243689/call_phone_icon\nCreative Commons (Attribution 3.0 Unported);\nhttps://www.iconfinder.com/Makoto_msk */\n\nexport const storeProducts = [\n  {\n    id: 1,\n    title: \"Google Pixel\",\n    img: \"img/product-1.png\",\n    price: 980000,\n    company: \"GOOGLE\",\n    info:\n      \"Lorem ipsum dolor amet offal butcher quinoa sustainable gastropub, echo park actually green juice sriracha paleo. Brooklyn sriracha semiotics, DIY coloring book mixtape craft beer sartorial hella blue bottle. Tote bag wolf authentic try-hard put a bird on it mumblecore. Unicorn lumbersexual master cleanse blog hella VHS, vaporware sartorial church-key cardigan single-origin coffee lo-fi organic asymmetrical. Taxidermy semiotics celiac stumptown scenester normcore, ethical helvetica photo booth gentrify.\",\n    inCart: false,\n    count: 0,\n    total: 0\n  },\n  {\n    id: 2,\n    title: \"Samsung S7\",\n    img: \"img/product-2.png\",\n    price: 1080000,\n    company: \"SAMSUNG\",\n    info:\n      \"Lorem ipsum dolor amet offal butcher quinoa sustainable gastropub, echo park actually green juice sriracha paleo. Brooklyn sriracha semiotics, DIY coloring book mixtape craft beer sartorial hella blue bottle. Tote bag wolf authentic try-hard put a bird on it mumblecore. Unicorn lumbersexual master cleanse blog hella VHS, vaporware sartorial church-key cardigan single-origin coffee lo-fi organic asymmetrical. Taxidermy semiotics celiac stumptown scenester normcore, ethical helvetica photo booth gentrify.\",\n    inCart: false,\n    count: 0,\n    total: 0\n  },\n  {\n    id: 3,\n    title: \"HTC 10 - Black\",\n    img: \"img/product-3.png\",\n    price: 740000,\n    company: \"htc\",\n    info:\n      \"Lorem ipsum dolor amet offal butcher quinoa sustainable gastropub, echo park actually green juice sriracha paleo. Brooklyn sriracha semiotics, DIY coloring book mixtape craft beer sartorial hella blue bottle. Tote bag wolf authentic try-hard put a bird on it mumblecore. Unicorn lumbersexual master cleanse blog hella VHS, vaporware sartorial church-key cardigan single-origin coffee lo-fi organic asymmetrical. Taxidermy semiotics celiac stumptown scenester normcore, ethical helvetica photo booth gentrify.\",\n    inCart: false,\n    count: 0,\n    total: 0\n  },\n  {\n    id: 4,\n    title: \"HTC 10 - White\",\n    img: \"img/product-4.png\",\n    price: 678000,\n    company: \"htc\",\n    info:\n      \"Lorem ipsum dolor amet offal butcher quinoa sustainable gastropub, echo park actually green juice sriracha paleo. Brooklyn sriracha semiotics, DIY coloring book mixtape craft beer sartorial hella blue bottle. Tote bag wolf authentic try-hard put a bird on it mumblecore. Unicorn lumbersexual master cleanse blog hella VHS, vaporware sartorial church-key cardigan single-origin coffee lo-fi organic asymmetrical. Taxidermy semiotics celiac stumptown scenester normcore, ethical helvetica photo booth gentrify.\",\n    inCart: false,\n    count: 0,\n    total: 0\n  },\n  {\n    id: 5,\n    title: \"HTC Desire 626s\",\n    img: \"img/product-5.png\",\n    price: 240000,\n    company: \"htc\",\n    info:\n      \"Lorem ipsum dolor amet offal butcher quinoa sustainable gastropub, echo park actually green juice sriracha paleo. Brooklyn sriracha semiotics, DIY coloring book mixtape craft beer sartorial hella blue bottle. Tote bag wolf authentic try-hard put a bird on it mumblecore. Unicorn lumbersexual master cleanse blog hella VHS, vaporware sartorial church-key cardigan single-origin coffee lo-fi organic asymmetrical. Taxidermy semiotics celiac stumptown scenester normcore, ethical helvetica photo booth gentrify.\",\n    inCart: false,\n    count: 0,\n    total: 0\n  },\n  {\n    id: 6,\n    title: \"Vintage Iphone\",\n    img: \"img/product-6.png\",\n    price: 170000,\n    company: \"apple\",\n    info:\n      \"Lorem ipsum dolor amet offal butcher quinoa sustainable gastropub, echo park actually green juice sriracha paleo. Brooklyn sriracha semiotics, DIY coloring book mixtape craft beer sartorial hella blue bottle. Tote bag wolf authentic try-hard put a bird on it mumblecore. Unicorn lumbersexual master cleanse blog hella VHS, vaporware sartorial church-key cardigan single-origin coffee lo-fi organic asymmetrical. Taxidermy semiotics celiac stumptown scenester normcore, ethical helvetica photo booth gentrify.\",\n    inCart: false,\n    count: 0,\n    total: 0\n  },\n  {\n    id: 7,\n    title: \"Iphone 7\",\n    img: \"img/product-7.png\",\n    price: 800000,\n    company: \"apple\",\n    info:\n      \"Lorem ipsum dolor amet offal butcher quinoa sustainable gastropub, echo park actually green juice sriracha paleo. Brooklyn sriracha semiotics, DIY coloring book mixtape craft beer sartorial hella blue bottle. Tote bag wolf authentic try-hard put a bird on it mumblecore. Unicorn lumbersexual master cleanse blog hella VHS, vaporware sartorial church-key cardigan single-origin coffee lo-fi organic asymmetrical. Taxidermy semiotics celiac stumptown scenester normcore, ethical helvetica photo booth gentrify.\",\n    inCart: false,\n    count: 0,\n    total: 0\n  },\n  {\n    id: 8,\n    title: \"Smashed Iphone\",\n    img: \"img/product-8.png\",\n    price: 70000,\n    company: \"apple\",\n    info:\n      \"Lorem ipsum dolor amet offal butcher quinoa sustainable gastropub, echo park actually green juice sriracha paleo. Brooklyn sriracha semiotics, DIY coloring book mixtape craft beer sartorial hella blue bottle. Tote bag wolf authentic try-hard put a bird on it mumblecore. Unicorn lumbersexual master cleanse blog hella VHS, vaporware sartorial church-key cardigan single-origin coffee lo-fi organic asymmetrical. Taxidermy semiotics celiac stumptown scenester normcore, ethical helvetica photo booth gentrify.\",\n    inCart: false,\n    count: 0,\n    total: 0\n  }\n];\n\nexport const detailProduct = {\n  id: 1,\n  title: \"Google Pixel - Black\",\n  img: \"img/product-1.png\",\n  price: 1100000,\n  company: \"google\",\n  info:\n    \"Lorem ipsum dolor amet offal butcher quinoa sustainable gastropub, echo park actually green juice sriracha paleo. Brooklyn sriracha semiotics, DIY coloring book mixtape craft beer sartorial hella blue bottle. Tote bag wolf authentic try-hard put a bird on it mumblecore. Unicorn lumbersexual master cleanse blog hella VHS, vaporware sartorial church-key cardigan single-origin coffee lo-fi organic asymmetrical. Taxidermy semiotics celiac stumptown scenester normcore, ethical helvetica photo booth gentrify.\",\n  inCart: false,\n  count: 0,\n  total: 0\n};\n","import React, { Component } from 'react'\nimport {StoreProducts, detailProduct, storeProducts} from './data';\n\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n    state = {\n        products:       [],\n        detailProduct:  detailProduct,\n        cart: [],\n        modalOpen: false,\n        modalProduct: detailProduct,\n        cartSubTotal: 0,\n        cartTax: 0,\n        cartTotal: 0\n    };\n\n    componentDidMount(){\n        this.setProducts();\n    }\n\n    setProducts = () => {\n        let tempProducts = [];\n        storeProducts.forEach(item => {\n            const singleItem = {...item};\n            tempProducts = [...tempProducts, singleItem]\n            \n        })\n\n        this.setState(()=>{\n            return {products: tempProducts}\n        });\n    };\n\n    /**UTILITY METHOD THAT GETS THE ITEM BY ID */\n    getItem = (id) => {\n        const product = this.state.products.find(item => item.id === id);\n        return product;\n    };\n\n    /**FUNCTION THAT IS CALLED FROM PRODUCT.JS \n     * TO SHOW DETAILS OF A PRODUCT \n    */\n    handleDetail = (id) => {\n        const product = this.getItem(id);\n        this.setState(() => {\n            return {detailProduct:product}\n        })\n        \n    }\n\n    /**Below is the function that handles addition of\n     * a product to the cart\n     */\n    addToCart = (id) => {\n        let tempProducts = [...this.state.products]; //Getting access to all the products in the state\n        const index = tempProducts.indexOf(this.getItem(id)); //Getting the index of the item. \n        const product = tempProducts[index];\n        product.inCart = true;\n        product.count = 1;\n\n        const price = product.price;\n        product.total = price; //Assigning the price of the item to the total price to pay for the product\n\n        this.setState(() => {\n            return {\n                products: tempProducts,\n                cart: [...this.state.cart, product]\n            };\n        },() => {\n            this.addTotals();\n        });\n\n    };\n\n    /**FUNCTION TO DISPLAY THE MODAL WHEN AN ITEM IS ADDED TO THE CART */\n    openModal = (id) => {\n        const product = this.getItem(id);\n        this.setState (() => {\n            return{\n                modalProduct: product,\n                modalOpen: true\n            }\n        })\n    }\n\n\n    /**FUNCTION TO CLOSE THE MODAL */\n    closeModal = () => {\n        this.setState(() => {\n            return{modalOpen: false};\n        })\n    }\n\n    /**FUNCTION TO INCREASE THE COUNT OF THE SAME PRODUCT IN THE CART */\n    increment = (id) => {\n        let tempCart = [...this.state.cart];\n        const selectedProduct = tempCart.find(item=> item.id ===id);\n        \n        const index = tempCart.indexOf(selectedProduct);\n        const product = tempCart[index];\n\n        product.count = product.count + 1;\n        product.total = product.count * product.price;\n    \n        this.setState(()=>{\n            return{\n                cart: [...tempCart]\n            }},\n            ()=>{\n                this.addTotals();\n            }\n        )\n    }\n\n    /**FUNCTION TO DECREMENT THE NUMBER OF THE SAME PRODUCT FROM THE CART */\n    decrement = (id) => {\n        const tempCart = [...this.state.cart];\n        const selectedProduct = tempCart.find(item => item.id === id);\n\n        const index = tempCart.indexOf(selectedProduct);\n        const product = tempCart[index];\n\n        product.count = product.count - 1;\n\n        if (product.count === 0){\n            this.removeItem(id);\n        } else{\n        \n        product.total = product.total - product.price;\n\n        this.setState(()=>{\n            return {\n                cart: [...tempCart]\n            }\n        },\n        ()=>{\n            this.addTotals();\n        })\n        }\n    }\n\n    /**THE FUNCTION BELOW IS TO REMOVE AN ITEM FROM THE CART */\n    removeItem = (id) => {\n        let tempProducts = [...this.state.products];\n        let tempCart = [...this.state.cart];\n\n        tempCart = tempCart.filter(item => item.id !== id); //Ensuring temporary Cart only has items that dont match the passed in id\n        \n        const index = tempProducts.indexOf(this.getItem(id));\n        let removedProduct = tempProducts[index];\n\n        /**Below, the values are reset to default after the item is removed from the cart */\n        removedProduct.inCart = false;\n        removedProduct.count = 0;\n        removedProduct.total = 0;\n\n        this.setState(()=>{\n            return{\n                cart: [...tempCart],\n                products: [...tempProducts],\n            }\n        }, ()=> {\n            this.addTotals();\n        })\n    }\n\n    clearCart = () => {\n        this.setState(()=>{\n            return {cart: []};\n        },\n\n            () => {\n                this.setProducts(); //All the values of the products are set back to default\n                this.addTotals(); //All the calculated totals are reset to 0\n            }\n        )\n    }\n\n    /**THE FUNCTION BELOW DOES ALL THE NECESSARY TOTALINGS \n     * FOR ITEMS ADDED TO THE CART\n     */\n    addTotals = () => {\n        let subTotal = 0;\n        this.state.cart.map(item=>(subTotal += item.total));\n        const tempTax = subTotal * 0.1;\n        const tax = parseFloat(tempTax.toFixed(2));\n        const total = subTotal + tax;\n        this.setState(()=>{\n            return{\n                cartSubTotal: subTotal,\n                cartTax: tax,\n                cartTotal: total\n\n            }\n        });\n    }\n\n    render() {\n        return (\n            <ProductContext.Provider value={{\n                ...this.state,\n                handleDetail: this.handleDetail,\n                addToCart: this.addToCart,\n                openModal: this.openModal,\n                closeModal: this.closeModal,\n                increment: this.increment,\n                decrement: this.decrement,\n                removeItem: this.removeItem,\n                clearCart: this.clearCart\n            }}>\n                {this.props.children}\n            </ProductContext.Provider>\n        )\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport {ProductProvider, ProductConsumer};","import React, { Component } from 'react'\nimport styled from 'styled-components';\nimport {Link} from 'react-router-dom';\nimport {ProductConsumer} from '../context';\nimport PropTypes from 'prop-types';\nimport {MdAddShoppingCart} from 'react-icons/md';\nimport {IconContext} from 'react-icons';\n\n\nexport default class Product extends Component {\n    render() {\n\n        /*Below, destructuring the object values into the properties(\"props\")\n        of the \"product\" element */\n        const {id, title, img, price, inCart} = this.props.product;\n        return (\n            <ProductStyler className=\"col-9 mx-auto col-md-6 col-lg-3 my-3\">\n                <div className=\"card\">\n\n                    <ProductConsumer>\n                        {(value) => (\n                            <div className=\"img-container p-5\" onClick={() => \n                                value.handleDetail(id)\n                            }>\n                            <Link to=\"/details\">\n                                <img src={img} alt=\"product\" className=\"card-img-top\"/>\n                            </Link>\n    \n                            <button className=\"cart-btn\" disabled={inCart ? true : false} onClick={()=>{value.addToCart(id);\n                            value.openModal(id)}}>\n    \n                            {inCart?(<p className=\"text-capitalize mb-0\">In cart</p>) : \n                            (\n                                <IconContext.Provider\n                                value = {{\n                                    color: \"white\",\n                                    size: 32\n                                }}\n                                >\n                                    <MdAddShoppingCart/>\n                                </IconContext.Provider>\n                            )}\n                            </button>\n            \n    \n                        </div>\n                        )\n                        \n                        }\n                    \n                    </ProductConsumer>\n\n                     \n\n                    {/*card footer at the bottom of each image */}\n                    <div className=\"card-footer d-flex justify-content-between\">\n                        <p className=\"align-self-center mb-0\">\n                            {title}\n                        </p>\n                        <h5 className=\"text-blue font-italic mb-0\">{price.toLocaleString()} \n                            <span className=\"mr-1\"><strong> UGX</strong></span>\n                        </h5>\n                    </div>\n\n                                        \n                </div>\n            </ProductStyler>\n        )\n    }\n}\n\n/*Below, Proptypes package is used to ensure that\nthe value of object(product) attributes are of the right\ntype */\nProduct.propTypes = {\n    product: PropTypes.shape({\n        id: PropTypes.number,\n        img: PropTypes.string,\n        title: PropTypes.string,\n        price: PropTypes.number,\n        inCart: PropTypes.bool\n    }).isRequired\n};\n\nconst ProductStyler = styled.div `\n    .card{\n        border-color: transparent;\n        transition: all 1s linear;\n    }\n\n    .card-footer{\n        background: transparent;\n        border-top: transparent;\n        transition: all 1s linear;\n    }\n\n    &:hover{\n        .card{\n            border: 0.04rem solid var(--mainBlue);\n            box-shadow: 2px 2px 5px 0px rgba(0,0,0,0.2);\n        }\n\n        .card-footer{\n            background: var(--mainGrey);\n        }\n    }\n\n    .img-container{\n        position: relative;\n        overflow: hidden;\n    }\n\n    \n\n    .img-container:hover .card-img-top{\n        transform: scale(1.2);\n        transition: all 0.8s linear;\n    }\n\n    .cart-btn{\n        position: absolute;\n        bottom: 0;\n        right: 0;\n        padding: 0.2rem 0.4rem;\n        background: var(--lightBlue);\n        border: none;\n        color: var(--mainWhite);\n        font-size: 1.4rem;\n        border-radius: 0.5rem, 0, 0.5rem, 0;\n        transform: translate(100%, 100%);\n        \n    }\n\n    .img-container:hover .cart-btn{\n        transform: translate(0, 0);\n        transition: 1s;\n    }\n\n    .cart-btn:hover {\n        color: var(--limeGreen);\n        cursor: pointer;\n    }\n\n`","import React from 'react'\n\nexport default function Title({name,title}) {\n    return (\n        <div className=\"row\">\n            <div className=\"col-10 mx-auto my-2 text-center text-title\">\n                <h1 className=\"text-capitalize font-weight-bold\">\n                    {name} <strong className=\"text-blue\">{title}</strong>\n                </h1>\n            </div>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport Product from './Product';\nimport Title from './Title';\nimport styled from 'styled-components';\nimport {ProductConsumer} from '../context';\n\nexport default class ProductList extends Component {\n\n    \n\n    render() {\n        \n        return (\n            \n            <React.Fragment>\n                <div className=\"py-5\">\n                    <div className=\"container\">\n                        <Title name=\"our\" title=\"merchandise\"></Title>\n                        <div className=\"row\">\n                            <ProductConsumer>\n                                {(productValue) =>{\n                                  return productValue.products.map(product => {\n                                      return <Product key={product.id} product={product}\n                                       />;\n                                  }) \n                                }}\n                            </ProductConsumer>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n             //   <Product />\n             \n            \n        )\n    }\n}\n\nconst ProductListStyler = styled.div`\n\n`","import React, { Component } from 'react';\nimport {ProductConsumer} from '../context';\nimport {Link} from 'react-router-dom';\nimport {ContentButton} from './Button';\n\nexport default class Details extends Component {\n    render() {\n        return (\n            \n            <ProductConsumer>\n\n                {(value) => {\n\n                    /**DESTRUCTURING THE ARRAY CONTAINIG PRODUCT DETAILS */\n                    const {id, company, img, info, price, title,  inCart} = value.detailProduct;\n\n                    return (\n                        <div className=\"container py-5\">\n                            {/*Title */}\n                            <div className=\"row\">\n                                <div className=\"col-10 mx-auto text-center text-slanted text-blue my-5\">\n                                    <h1>\n                                        {title}\n                                    </h1>\n\n                                </div>\n                            </div>\n                            {/**End title */}\n                            \n                            {/**Product info */}\n                            <div className=\"row\">\n                                <div className=\"col-10 mx-auto col-md-6 my-3 text-capitalize\">\n                                    <img  src={img} className=\"img-fluid\" alt=\"product\"/>\n                                </div>\n\n                                {/**Product description */}\n                                <div className=\"col-10 mx-auto col-md-6 my-3 text-capitalize\">\n                                    <h1>Model: {title}</h1>\n                                    <h4 className=\"text-title text-uppercase text-muted mt-3 mb-2\">\n                                        Made by: <span className=\"text-uppercare\">\n                                            {company}\n                                        </span>\n                                    </h4>\n\n                                    <h4>\n                                        <strong>\n                                            Price: {price.toLocaleString()} <span>UGX</span>\n                                        </strong>\n                                    </h4>\n                                    \n                                    <h4 className=\"text-capitalize font-weight-bold mt-3 mb-0\">Details  </h4>\n                                    <p className=\" text-muted\">\n                                        {info}\n                                    </p>\n\n                                    {/**Buttons */}\n                                    <div>\n                                        <Link to=\"/\">\n                                            <ContentButton>\n                                                back to products\n                                            </ContentButton>\n                                        </Link>\n\n                                        {\" \"}\n\n                                        <ContentButton cart disabled={inCart? true : false} onClick = {()=>{\n                                                value.addToCart(id);\n                                                value.openModal(id);\n                                            }}>\n                                            {inCart? \"inCart\" : \"add to cart\"}\n                                            \n                                        </ContentButton>\n                                    </div>\n\n                                </div>\n\n                            </div>\n\n                        </div>\n                    )\n\n                }}\n\n            </ProductConsumer>\n            \n        );\n    }\n}\n","import React from 'react'\n\nexport default function CartColumns() {\n    return (\n        <div className=\"container-fluid text-center d-none d-lg-block\">\n            <div className=\"row\">\n\n                <div className=\"col-10 mx-auto col-lg-2\">\n                    <p className=\"text-uppercase\">Products</p>\n                </div>\n\n                <div className=\"col-10 mx-auto col-lg-2\">\n                    <p className=\"text-uppercase\">Name</p>\n                </div>\n\n                <div className=\"col-10 mx-auto col-lg-2\">\n                    <p className=\"text-uppercase\">Price</p>\n                </div>\n\n                <div className=\"col-10 mx-auto col-lg-2\">\n                    <p className=\"text-uppercase\">Quantity</p>\n                </div>\n\n                <div className=\"col-10 mx-auto col-lg-2\">\n                    <p className=\"text-uppercase\">Remove</p>\n                </div>\n\n                <div className=\"col-10 mx-auto col-lg-2\">\n                    <p className=\"text-uppercase\">Total</p>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function EmptyCart() {\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-10 mx-auto text-center\">\n                    <h1>Your Cart Is Currently Empty</h1>\n                </div>\n            </div>\n            \n        </div>\n    )\n}\n","import React from 'react';\nimport {MdRemoveShoppingCart} from 'react-icons/md';\n\nexport default function CartItem({item, value}) {\n    const {id,title,img,price,total,count} = item;\n    const {increment,decrement, removeItem} = value;\n    return (\n        <div className=\"row my-2 text-capitalize text-center\">\n            <div className=\"col-10 mx-auto col-lg-2\">\n                <img \n                src={img} \n                style={{width: '5rem', height: '5rem'}} \n                className=\"img-fluid\" \n                alt=\"product\"\n                /> \n\n            </div>\n\n            <div className=\"col-10 mx-auto col-lg-2\">\n                <span className=\"d-lg-none\">Product: </span>\n                {title}\n            </div>\n\n            <div className=\"col-10 mx-auto col-lg-2\">\n                <span className=\"d-lg-none\">Price: </span>\n                {price.toLocaleString()}<span> UGX</span>\n            </div>\n\n            <div className=\"col-10 mx-auto col-lg-2 my-2 my-lg-0\">\n                <div className=\"d-flex justify-content-center\">\n                    <span className=\"btn btn-black mx-1\" onClick={()=>decrement(id)}> - </span>\n\n                    <span className=\"btn btn-black mx-1\">{count}</span>\n\n                    <span className=\"btn btn-black mx-1\" onClick={()=>increment(id)}>+</span>\n\n                </div> \n\n            </div>\n\n            <div className=\"col-10 mx-auto col-lg-2\">\n                <div className=\"cart-icon\" onClick={()=>removeItem(id)}>\n                    <MdRemoveShoppingCart size={32}/>\n                </div>\n                \n            </div>\n\n            <div className=\"col-10 mx-auto col-lg-2\">\n                <strong>Item Total: {total.toLocaleString()} UGX</strong>\n                \n            </div>            \n\n        </div>\n\n\n    )\n}\n","import React from 'react';\nimport CartItem from './CartItem';\n\nexport default function CartList({value}) {\n    \n    const {cart} = value \n    console.log(value + \" \" + cart);\n\n    return (\n        <div className=\"container-fluid\">\n            {cart.map(item=>{\n                return <CartItem key={item.id} item={item} value={value}/>\n            })}\n        </div>\n    )\n}\n","import React from 'react';\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\n \nexport default class PayPalButton extends React.Component {\n    render() {\n        const onSuccess = (payment) => {\n            // Congratulation, it came here means everything's fine!\n                    console.log(\"The payment was succeeded!\", payment);\n                    this.props.clearCart(); //clearing the cart after a transaction\n                    this.props.history.push('/');\n            \t\t// You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\n        }\n \n        const onCancel = (data) => {\n            // User pressed \"cancel\" or close Paypal's popup!\n            console.log('The payment was cancelled!', data);\n            // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\n        }\n \n        const onError = (err) => {\n            // The main Paypal's script cannot be loaded or somethings block the loading of that script!\n            console.log(\"Error!\", err);\n            // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\n            // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\n        }\n \n        let env = 'sandbox'; // you can set here to 'production' for production\n        let currency = 'UGX'; // or you can set this value from your props or state\n        /*let total = 1;*/ // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\n        // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\n \n        const client = {\n            sandbox:  process.env.REACT_APP_APP_ID,\n            production: 'YOUR-PRODUCTION-APP-ID',\n        }\n        // In order to get production's app-ID, you will have to send your app to Paypal for approval first\n        // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\n        //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\n        // For production app-ID:\n        //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\n \n        // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\n        return (\n            <PaypalExpressBtn \n            env={env} \n            client={client} \n            currency={currency} \n            total={this.props.total} \n            onError={onError} \n            onSuccess={onSuccess} \n            onCancel={onCancel} />\n        );\n    }\n}","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport PayPalButton from './PayPalButton';\n\nexport default function CartTotals({value, history}) {\n\n    const {cartSubTotal, cartTax, cartTotal, clearCart} = value;\n\n    return (\n        <React.Fragment>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-10 mt-2 ml-sm-5 ml-md-auto ml-md-auto col-sm-8 text-capitalize text-right\">\n                        <Link to=\"/\">\n                            <button className=\"btn btn-outline-danger text-uppercase mb-3 px-5\" type=\"button\" onClick={()=>clearCart()} >\n                                Clear Cart !!\n                            </button>\n                        </Link>\n\n                        <h5>\n                            <span className=\"text-title\">\n                                SubTotal : \n                            </span>\n                            <strong>\n                                {cartSubTotal.toLocaleString()} UGX\n                            </strong>\n                        </h5>\n\n                        <h5>\n                            <span className=\"text-title\">\n                                Tax : \n                            </span>\n                            <strong>\n                                {cartTax.toLocaleString()} UGX\n                            </strong>\n                        </h5>\n\n                        <h5>\n                            <span className=\"text-title\">\n                                Total : \n                            </span>\n                            <strong>\n                                {cartTotal.toLocaleString()} UGX\n                            </strong>\n                        </h5>\n\n                      {/*  <PayPalButton \n                        total={cartTotal.toLocaleString()} \n                        clearCart={clearCart} \n                        history={history}\n                      /> */}\n                             \n                        \n\n\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n","import React, { Component } from 'react';\nimport Title from '../Title';\nimport CartColumns from './CartColumns';\nimport {ProductConsumer} from '../../context';\nimport EmptyCart from './EmptyCart';\nimport CartList from './CartList';\nimport CartTotals from './CartTotals';\n\n\nexport default class Cart extends Component {\n    render() {\n        return (\n            <section>\n\n                <ProductConsumer>\n                    {value => {\n                        const {cart} = value;\n\n                        /**In the \"If\" statement below, \n                         * the title is only displayed if the cart is empty*/\n                        if (cart.length > 0) {\n                            return (\n                                <React.Fragment>\n                                    <Title name=\"your\" title=\"cart\"></Title>\n\n                                    {/**Below is a Cart Columns element to display headings in the cart component */}\n                                    <CartColumns />\n\n                                    {/**Below is a CartList Component to list the items added to the cart */}\n                                    <CartList value={value}/>\n\n                                    <CartTotals value={value} history={this.props.history}/>\n                                    \n                                </React.Fragment>\n                                \n                            )\n                        } else {\n                            return (\n                                <EmptyCart />\n                            )\n                        }\n                    }}\n\n                </ProductConsumer>\n\n                \n\n                \n            </section>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-10 mx-auto text-center text-title text-uppercase pt-5\">\n                        <h1 className=\"display-3\">\n                            404\n                        </h1>\n\n                        <h1>\n                            error\n                        </h1>\n\n                        <h2>\n                            page not found\n                        </h2> \n\n                        <h3> \n                            the requested URL <span className=\"text-danger\">{this.props.location.pathname}</span> was not found\n                        </h3>\n                    </div>\n                </div>                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components';\nimport {ProductConsumer} from '../context';\nimport {ContentButton} from './Button';\nimport {Link} from 'react-router-dom';\n\nexport default class Modal extends Component {\n    render() {\n        return (\n            <ProductConsumer>\n                {\n                    (value) => {\n                        const {modalOpen, closeModal} = value;\n                        const {img, title, price} = value.modalProduct;\n\n                        if (!modalOpen){\n                            return null;\n                        }\n                        else {\n                            return(\n                            <ModalContainer>\n                                <div className=\"container\">\n                                    <div id=\"modal\" className=\"row\">\n                                        <div className=\"col-8 mx-auto col-md-6 col-lg-4 text-center text-capitalize\">\n                                            <h5>Item Added To Cart</h5>\n                                            <img src={img} className=\"img-fluid\" alt=\"product\"/>\n                                            <h5>{title}</h5>\n                                            <h5 className=\"text-muted\">price: {price.toLocaleString()} UGX</h5>\n                                            <Link to=\"/\">\n                                                <ContentButton onClick={()=>{closeModal()}}>\n                                                    Store\n                                                </ContentButton>\n                                            </Link>\n                                            {\" \"}\n                                            <Link to=\"/cart\">\n                                                <ContentButton cart onClick={()=>{closeModal()}}>\n                                                Go To Cart\n                                                </ContentButton>\n                                                \n                                            </Link>\n                                            \n                                        </div>\n                                         \n                                    </div>\n                                </div>\n                            </ModalContainer>\n                            )\n                        }\n                    }\n                }\n            </ProductConsumer>\n        )\n    }\n}\n\nconst ModalContainer = styled.div `\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0,0,0,0.3);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    #modal{\n        background: var(--mainWhite);\n        border-radius: 0.3rem;\n        padding-right: 3;\n    }\n`;","import React, { Component } from 'react';\nimport './about.css';\n\nexport default class About extends Component {\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <div className='row col-10 mx-auto content'>\n                    <p className='text-capitalize'>\n                        <p className=\"text-bold\">Here, you will find all you need to know about our company. <br></br></p>\n\n                    Do you need an mobile phone?, we've got it.\n                    </p>\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from './components/Navbar';\nimport ProductList from './components/ProductList';\nimport Details from './components/Details';\nimport Cart from './components/cart';\nimport Default from './components/Default';\nimport Modal from './components/Modal';\nimport About from './components/about';\n\n\nclass App extends Component {\n  render() {\n    return (\n      //react.fragment allows us to simulate html tags. i.e. no need to rewrite the tags over and over again.\n      <React.Fragment>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={ProductList} />\n          <Route path=\"/Details\" component={Details} />\n          <Route path=\"/Cart\" component={Cart} />\n          <Route path=\"/About\" component={About} />\n          <Route component={Default} />\n        </Switch>\n\n        <Modal />\n\n      </React.Fragment>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport {ProductProvider} from './context'\n\nReactDOM.render(\n<ProductProvider>\n    <Router>\n        <App />   \n    </Router>\n    </ProductProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}